paths:
  data: ${oc.env:TITAN_DATA}
  results: ${oc.env:TITAN_RESULTS}

hydra:
  run:
    dir: ${paths.results}/lenient_split/${now:%Y-%m-%d_%H-%M-%S-%f}
    # Please set the BIMCA_RESULTS environment variable to your desired output location.
    # You can override this value when running train.py - for example: python train.py hydra.run.dir='/some/path/you/want'
    # this approach is especially useful when you run a daemonized process which has its stdout/err redirected to a log file within this dir. 
    # alternatively, you can use multi-run (looks useful for grid searches etc.)  - read: https://hydra.cc/docs/configure_hydra/workdir/#configuration-for-multirun
    # it uses hydra.sweep.dir and hydra.sweep.subdir (which uses ${hydra.job.num})

trainer:
  gpus: 1
  max_epochs: 1000 
  auto_lr_find: false

model:  
  ligand_attention_size: 16
  receptor_attention_size: 16
  ligand_embedding_size: 32
  receptor_embedding_size: 35
  ligand_embedding: "learned"   
  ligand_filters: [256, 256, 256]    
  ligand_vocabulary_size: 575
  ligand_padding_length: 696
  receptor_embedding: "learned"  
  receptor_filters: [256, 256, 256]      
  receptor_vocabulary_size: 33
  receptor_padding_length: 2536
  dense_hidden_sizes: [256]
  activation_fn: "relu"
  final_activation: false
  loss_fn: "mse"
  dropout: 0.3
  batch_norm: true
  learning_rate: 0.001

data:
  TITAN_benchmark:
    lightning_data_module:       
      ligand_csv: "${paths.data}/ligands/TITAN_08-02-2023@single_protein_target@ligands.tsv"
      target_csv: "${paths.data}/targets/TITAN_08-02-2023@single_protein_target@targets.tsv"
      affinity_csv: "${paths.data}/pairs/TITAN_08-02-2023@single_protein_target@affinity_pairs_v0.1.tsv"
      split_csv: "${paths.data}/splits/splits/lenient/split_lenient_0.14_0.14_0.14_0.14_0.14_0.15_0.15.tsv"

      train_dataset_path: "${paths.data}/pretraining/non_kinase_train.csv"
      val_dataset_path: "${paths.data}/pretraining/non_kinase_test.csv"
      test_dataset_path: "${paths.data}/pretraining/non_kinase_test.csv"

      naming_conventions:
        pairs_table_ligand_column: ligand_name
        pairs_table_sequence_column: uniprot_accession
        pairs_table_affinity_column: pIC50
        ligand_padding_length: ${model.ligand_padding_length}
        receptor_padding_length: ${model.receptor_padding_length}
      
      
      # sample processing pipeline related
      train_augment_molecule_shuffle_atoms: false    
      train_augment_protein_flip: true
    
      train_batch_size: 128
      eval_batch_size: 512
      num_workers: 20   
      train_shuffle: true

